user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

#### A1. SET SITE_ROOT TO FRONT END DIR
#### A2. check ssl_certificate path to file
#### B. ITERATIVELY SET ACL READABLE FOR u:www-data ON EVERY DIR IN THE PATH OF THE THE TARGET DIR WHEN SAID DIR IS IN 3RD USER HOME DIR
#### C. SET PASSWORD FOR PASSWORD PAGE BELOW!

#### example: sudo setfacl -m u:www-data:rx <path>
#### verify: getfacl <path>
#### test: sudo -u www-data stat <path-to-file-in-$SITE_ROOT>

events {
    worker_connections 768;
    # multi_accept on;
}

http {
    types {
        application/manifest+json  webmanifest json;
    }

    map "" $SITE_ROOT {
		default "/home/uzun/Development/Bobik/frontend";
    }

    include       mime.types;
    default_type  application/octet-stream;

	log_format mtls
        '$remote_addr $time_iso8601 $server_protocol '
        '$ssl_client_verify $ssl_protocol $ssl_cipher "$request"';

    log_format rich '$remote_addr - $remote_user [$time_local] '
                  '"$request" $status $body_bytes_sent '
                  '"$http_referer" "$http_user_agent" '
                  'host=$host scheme=$scheme rt=$request_time '
                  'ua=$upstream_addr us=$upstream_status urt=$upstream_response_time';

    #access_log /var/log/nginx/access_cert.log mtls;

    sendfile        on;
    #tcp_nopush     on;

    ssl_protocols TLSv1.2 TLSv1.3;

    keepalive_timeout 65s;
    keepalive_requests 1000;

    # HTTP/2/3 idle settings so long-lived connections donâ€™t churn
    http2_idle_timeout 180s;        # if you have http2 on
    # quic_idle_timeout 180s;       # if you run QUIC/HTTP3

    # TLS sessions: disable tickets (kills TLS1.3 PSK resumption)
    # but keep a shared cache for TLS1.2 resumption (optional)
    ssl_session_tickets off;
    ssl_session_cache   shared:SSL:20m;  # OK to keep; helps non-1.3 clients
    ssl_session_timeout 15m;

	#gzip  on;

    map $ssl_client_verify $cert_auth {
        default "0";            # No valid client cert
        SUCCESS "1";            # Valid client cert
    }

    map $http_cookie $session_auth {
        default "0";            # No session
        "~auth_session=valid" "1";  # Valid session
    }

    map "$cert_auth:$session_auth" $auth_allowed {
        default "0";  # Default to deny access
        "1:0" "1";    # Allow if client cert is valid
        "0:1" "1";    # Allow if session auth is valid
        "1:1" "1";    # Allow if both are valid
    }

    server {
        listen       80;
        server_name bobik.lan 192.168.99.5;
        return 301 https://bobik.lan$request_uri;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 443 ssl http2;
        server_name bobik.lan 192.168.99.5;
        ssl_certificate /home/uzun/Development/Bobik/server-keys/bobik-cert.pem;
        ssl_certificate_key /home/uzun/Development/Bobik/server-keys/bobik-key.pem;
        ssl_client_certificate  /home/uzun/Development/Bobik/server-keys/bobik-client-ca.pem;
        ssl_verify_client optional;  # Allow clients without certs

        location /manifest.json {
            root $SITE_ROOT;
            default_type application/manifest+json;
            index manifest.json;
        }

        location = /video { return 301 /video/; }

        location /video/ {
            proxy_pass         http://sauron:5000/api/main_cam?bbox=1&fps=5&h=720&motion=1;
            proxy_http_version 1.1;

            # Preserve client info
            proxy_set_header   Host               $host;
            proxy_set_header   X-Real-IP          $remote_addr;
            proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto  $scheme;
            proxy_set_header   Connection         "";          # keep-alive over HTTP/1.1

            # Long-running stream hygiene
            proxy_buffering           off;
            proxy_request_buffering   off;
            sendfile off;
            tcp_nodelay on;
            gzip                      off;
            chunked_transfer_encoding on;                      # allow chunked MJPEG/etc.
            add_header X-Accel-Buffering "no" always;

            # Absolutely no caching anywhere (browsers, proxies, CDNs)
            add_header Cache-Control      "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0, s-maxage=0" always;
            add_header Pragma             "no-cache" always;   # legacy HTTP/1.0
            add_header Expires            "0" always;
            add_header Surrogate-Control  "no-store" always;

            # Disable validators that could enable conditional caching
            etag                off;
            if_modified_since   off;

            # Defeat any nginx proxy cache layers if present
            proxy_no_cache      1;
            proxy_cache_bypass  1;

            # Good for long-running streams
            proxy_read_timeout  3600s;
            proxy_send_timeout  3600s;
        }

        location /icon192.png {
            root $SITE_ROOT;
            index icon192.png;
        }

        location /icon512.png {
            root $SITE_ROOT;
            index icon512.png;
        }
        
        location /icon180.png {
            root $SITE_ROOT;
            index icon180.png;
        }

        location /favicon.ico {
            root $SITE_ROOT;
            index favicon.ico;
        }

        location / {
            # If authentication is valid, forward to backend
            root $SITE_ROOT;
            index index.html;
            try_files $uri $uri/ =404;

            # If no authentication, redirect to /passwordauth
            if ($auth_allowed = "0") {
                #return 302 /passwordauth;
                return 496;
            }
        }

        location /passwordauth {
            alias $SITE_ROOT/;
            index password.html;
        }

        location = /validate-password {
            if ($arg_password = "bobik") {
                add_header Set-Cookie "auth_session=valid; Path=/; HttpOnly; Secure; Max-Age=60";
                    return 302 /;  # Redirect back to "/" after successful login
            }
            return 302 /passwordauth;
        }
    
    }
    include servers/*;
}
