#user  nobody;
user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    map $ssl_client_verify $cert_auth {
        default "0";            # No valid client cert
        SUCCESS "1";            # Valid client cert
    }

    map $http_cookie $session_auth {
        default "0";            # No session
        "~auth_session=valid" "1";  # Valid session
    }

    map "$cert_auth:$session_auth" $auth_allowed {
        default "0";  # Default to deny access
        "1:0" "1";    # Allow if client cert is valid
        "0:1" "1";    # Allow if session auth is valid
        "1:1" "1";    # Allow if both are valid
    }

    server {
        listen       80;
        server_name bobik.lan 192.168.99.5;
        return 301 https://bobik.lan$request_uri;
    }

    server {
        listen 443 ssl;
        server_name bobik.lan 192.168.99.5;

        ssl_certificate     /etc/nginx/ssl/bobik-cert.pem;
        ssl_certificate_key /etc/nginx/ssl/bobik-key.pem;

        ssl_client_certificate /etc/nginx/ssl/bobik-client-ca.pem;
        ssl_verify_client optional;  # Allow clients without certs


	location /manifest.json {
            root /var/www;
	    index manifest.json;
	}

	location /icon192.png {
            root /var/www;
            index icon192.png;
        }

        location /icon512.png {
            root /var/www;
            index icon512.png;
        }	

        location / {
            # If authentication is valid, forward to backend
	    root /var/www;
            index index.html;
            try_files $uri $uri/ =404;

            # If no authentication, redirect to /passwordauth
            if ($auth_allowed = "0") {
                return 302 /passwordauth;
            }
        }

        location /passwordauth {
       		alias /var/www/;
		index password.html; 
	}

        location /validate-password {
            if ($arg_password = "bobik") {
                add_header Set-Cookie "auth_session=valid; Path=/; HttpOnly; Secure; Max-Age=60";
                return 302 /;  # Redirect back to "/" after successful login
            }
            return 302 /passwordauth;
        }
    }

    include servers/*;
}
